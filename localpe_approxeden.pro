pro localpe_approxeden;,zz,f107,f107a,eden,etemp,idate,lat,lon,utsec

@ace_common_blocks.prg ; common blocks used for all atmospheric chemistry and energetics (ace) software
                       ; see this file for definitions


;;
;; this procedure estimates and electron density profile by doing
;; a simple scaling between hi and lo f107 profiles (from iri by web)
;
common localpe_approxden,ziri,ehi,elo,tehi,telo,f10hi,f10lo,localpe_approxden_readonce,$
ei_hi,ei_lo,tei_hi,tei_lo

if (total(size(localpe_approxden_readonce)) lt 1.0) then begin

openr,lun,'localpe_approxeden.dat',/get_lun
s='a string'
readf,lun,s
readf,lun,s

nz=500-60+1
ziri=fltarr(nz)
ehi=ziri
elo=ziri
tehi=ziri
telo=ziri

for i=0,nz-1 do begin
  readf,lun,a,b,c,f10lo
  ziri[i]=a
  elo[i]=b
  telo[i]=c
  endfor
  
  for i=0,nz-1 do begin
  readf,lun,a,b,c,f10hi
  ehi[i]=b
  tehi[i]=c
  endfor

free_lun,lun

ehi=ehi>0.
elo=elo>0.
tehi=tehi>0.
telo=telo>0.

; interpolate to input grid and put in units of cm^-3
ei_hi=interpol(ehi,ziri,zz)/1e6
ei_lo=interpol(elo,ziri,zz)/1e6
tei_hi=interpol(tehi,ziri,zz)
tei_lo=interpol(telo,ziri,zz)
   
localpe_approxden_readonce=1
endif ; readonce

nout=n_elements(zz)
eden=fltarr(nout)
etemp=fltarr(nout)

for i=0,nout-1 do begin

eslope=(ei_hi[i]-ei_lo[i])/(f10hi-f10lo)
eden[i]=ei_lo[i] + eslope*(f107-f10lo)
teslope=(tei_hi[i]-tei_lo[i])/(f10hi-f10lo)
etemp[i]=tei_lo[i] + teslope*(f107-f10lo)

endfor

;___________________________________________________________________________________________________________________________________________________
;____________________________________________________________OR_______________________________________________________________________________________

;Using the new IRI model to calculate the electron temperature and electron density values
;____________________________________________________________________________________________________________

;Some IRI inputs


;iyyyy=fix(idate/1000)
;doy=-(fix(idate)-(fix(idate/1000)*1000))
;
;localhour=(((utsec/240. + lon)/15. + 24. ) mod 24.) ;PE Model version 
;;localhour=(utsec/3600. + along/15.)  mod 24.  ;My version NEEDS TO BE CHECKED!!
;;localhour=hour+25.                             ;IRI description: LOCAL TIME (OR UNIVERSAL TIME + 25) IN DECIMAL
;;________________________________________________________________________________________________________________
;
;
;;#1 make a file with the inputs to the IRI model
;
;openw, lun_iriinp,'/home/srimoyee/Desktop/nrl_files/sav_files/iri_inputs.dat',/get_lun
;printf,lun_iriinp,'alati', 'along', 'iyyyy','mmdd','iut','dhour',$
;                  'f107a','f107','height'
;printf,lun_iriinp,n_elements(zz)
;printf,lun_iriinp,lat
;printf,lun_iriinp,lon
;printf,lun_iriinp,iyyyy
;printf,lun_iriinp,doy
;printf,lun_iriinp,localhour
;printf,lun_iriinp,f107a
;printf,lun_iriinp,f107
;printf,lun_iriinp,zz
;
;close, lun_iriinp
;;__________________________________________________________________________________________
;
;;#2 make the iri executable file
;
;;spawn,$
;;  'f77 -o iri_idl_interface.exe iri_idl_interface.for irisub.for irifun.for iritec.for iridreg.for igrf.for cira.for iriflip.for'
;;__________________________________________________________________________________________
;
;;#3 call the fortran wrapper using spawn command
;
;iri_filename=['/home/srimoyee/Desktop/iri/iri_idl_interface.exe']  ; fortran executable file/wrapper.
;spawn,iri_filename,result,/noshell
;
;;__________________________________________________________________________________________
;
;;#4 open the output file generated by fortran IRI to get the varibles
;
;iri_outdata=dblarr(2,n_elements(zz))  ;2 columns: eden and etemp
;
;iri_outfile='/home/srimoyee/Desktop/nrl_files/sav_files/iri_outputs.dat'
;openr, lun_iri, iri_outfile, /get_lun
;skip_lun, lun_iri, 1, /lines ; 1 header line
;readf, lun_iri , iri_outdata
;free_lun, lun_iri
;
;;__________________________________________________________________________________________
;
;;#5 save the file data into the local variables 
;
;
;eden=reform(iri_outdata(0,*))
;etemp=reform(iri_outdata(1,*))

;___________________________________________________________________________________________________________________________________________________

return

end
